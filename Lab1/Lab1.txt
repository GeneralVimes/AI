**Інструкції до виконання лабораторної роботи "Програмування ботів для гри Баше"**
У даній лабораторній роботі ми ознайомимося з середовищем моделювання гри Баше, програмними агентами, які будуть у неї грати, створимо власних програмних агентів та влаштуємо між ними турніри 

**Крок 1**
Відкрийте папку Lab1. Запустіть файл index.html у браузері та відкрийте консоль браузера.
На старті роботи скрипта main.js створюється ігровий світ для гри Баше, у якій допускається брати 1, 2 чи 3 камінці та виграє той, хто забирає останній предмет.

Запустимо у цей світ двох ботів та проведемо між ними одну гру. 

У роботі дано два типи ботів: 
BachetBot1 вміє брати лише 1 камінь кожним ходом
BachetBotRandom завжди визначає свій хід випадково, числом від 1 до 3

Введіть у консоль команду
window.world.bots = [new BachetBot1("B1"), new BachetBotRandom("RND")]

Так ви створите двох ботів означених типів з іменами В1 та RND

Тепер зоб запустити одну гру між цими ботами, введіть команду
window.world.startGame(true)

Ви побачите результат гри цих двох ботів по ходах.

**Крок 2**
Тепер проведемо турнір між цими двома типами ботів турнір, у якій вони удвох зіграють 1000 партій, кожен раз з випадкового числа 
window.world.startTournamentBetweenBots([new BachetBot1("B1"), new BachetBotRandom("RND")], 1000, 2, false)

Ви побачите результат турніру у консолі. Запишіть собі, скільки в середньому партій кожен з них виграє

**Крок 3**
Тепер розробимо нового бота, такого, який завжди бере 2 камінці, незважачи ні на що. Код для цього бота пишеться у модулі bots.js
За зразов оберіть бота, який бере 1 камінець. Назвіть клас цього бота BachetBot2

Запустіть турнір для всіх трьох ботів, у якому кожен з кожним буде грати по 1000 партій. Це робиться командою у консолі:
window.world.startTournamentBetweenBots([new BachetBot1("B1"), new BachetBotRandom("RND"), new BachetBot2("B2")], 1000, 2, false)

Запишіть, які результати ботів у такому турнірі

**Крок 4**

Давайте зробимо покращену версію бота BachetBot2. Його поточна версія буде намагатися брати 2 камінці навіть у тих ситуаціях, коли у купі залишається 1 камінь. І тому йому часто зараховується програш саме за порущення правил гри.
Розробіть бота BachetBot2Smart. Задайте йоому наступну поведінку: якщо у купі рівно 1 камінець, він буде брати цей 1 камінець, а в усіх інших випадках буде брати 2 камінці

Поведінкою ботів керує функція makeMoveForSituation(gameDataOb)
У об'єкті gameDataOb у параметрі N він отримує поточну кількість камінців.

Тому дана функція для бота BachetBot2Smart буде мати вигляд:

	makeMoveForSituation(gameDataOb){
		if (gameDataOb.N==1){
			return {n:1}
		}else{
			return {n:2}
		}
	}

Після того, як додасте бота BachetBot2Smart у файл bots.js запустіть турнір з чотирма типами ботів, виконавши команду у консолі:
window.world.startTournamentBetweenBots([new BachetBot1("B1"), new BachetBotRandom("RND"), new BachetBot2("B2"), new BachetBot2Smart("B2Smart")], 1000, 2, false)

**Крок 5**
Зробимо покращену версію бота, який бере випадкове число камінців. Цому також програш часто зараховується за порушення правил, тому що він, обираючи хід випадково, може намагатися взяти з купи більше камінчів, ніж там є (за хід не за правилами гра зараховує програш)

Створіть бота BachetBotRandomSmart, який буде робити випадкові ходи, якщо камінців 3 або більше, якщо ж на столі 2 камінці, він буде брати випадково 1 чи 2, а якщо ж залишився 1 камінь, то буде просто брати Його

Додавши цього бота запустіть турнір з усіма п'ятьма типами ботів. Запишіть, який в них вийшов розподіл турнірних місць

**Крок 6**
Додайте тепер бота, який реалізовує ідеальну стратегію для гри Баше за даними правилами. Провівши турнір впевніться, що він всуху обігрує всіх решту ботів.

**Крок 7**
Створіть бота, який би грав лише трохи слабше ідеального бота, але сильніше ніж усі решта сильніше ніж усі 5 ботів неї

**Завдання: Створення ботів для турніру за правилами 1, 3, 4**
На лекції ми розглянули альтернативний варіант правил гри Баше, у які можна брати з купи лише 1, 3 або 4 камінці і виграє той, хто зробить хід останнім

Для цих правил ми влаштуємо турнір між усіма ботами, які розроблять студенти.

Щоб потестувати, як ваш бот вестиме себе на цих правилах, у файлі main.js заокоментуйте рядок
window.world = new BachetWorld();
та розкоментуйте рядок 
window.world = new UniversalBachetWorld([1,3,4],true);

Створиться ігровий світ, у якому дозволені ходи: 1, 3, 4 та виграє той, хто забирає останній камінь

Потестуйте, як вестимуть себе тут боти, створені вами для правил 1, 2, 3. 

Розробіть бота, який гратиме краще.
